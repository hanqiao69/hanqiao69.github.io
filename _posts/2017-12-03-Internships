---
layout: post
title: The Love Hate Relationship With Computer Science
---

I have no regrets taking computer science as my major. 

I remember freshman year when I talked to upperclassmen and mentioned the fact that I wanted to study computer science, they would all nod approvingly and say "yeah you'll totally get a job after graudating." I thought, that's great news, something to look forward to in the future. 

I was no computer prodigy, not now, not ever. High school was filled with failed attempts to study the subject. I attempted to participate in the Olympiad in Information training for a few months, learning how to write in for and while loops in C++. But I wasn't good at it and when it turns slightly more complicated, I quit. Computer science classes in middle school and high school weren't that fun because the guys in the class would just play games with each other when the teacher was not watching and I would be bored following strict instructions of what to do with my computers even though I had no idea why. 

One of my favorite anecdote was from my econ teacher, who went to the same high school as me: It was a programming class about loops. My econ teacher, call him M from now, really liked this girl at the time, so he wrote a program that was like "while true print out `I like XXX`" and the program compiled and worked except there was no ending so the forever loop just went on and on. At the time, the computer classroom has a teacher control system that can easily share screens of any student workstations and the teacher told the class "let's see what M's program does" and suddenly the entire class saw on the big monitor the constant printing of the message "I like XXX". Just take a moment to imagine a 14-year-old boy accidentally revealing his secret love in the most outrageous way possible. 

Back to my less hilarious and equally frustrating attempts. My female computer science teacher, was pretty sexist. Throughout training and classes, she would always explicitly show favors for those smart kids. One day she asked in class "who are the smartest guys in the class?" Beware I was not just in any high school class, literally everyone in my class participated in some kind of national Olympiads, either for math, physics, chemistry, biology or information. Everyone is smart as hell already and we *are* the smart nerds that everyone else looks up to. The guys in the room started nominating each other non-seriously, but she was so serious. She went on to say that "Computer science is really useful. Keyboard to a boy is like piano keys to a girl. You can do so many things with it." When you have a teacher that have enough smart guys in the class to be pleased with, she doesn't really care about what others might think.

I also signed up for AP CS my senior year. I taught myself all of AP STAT junior year and got a 5 for it so I thought this CS stuff should be no different. But the problem was, I had zero motivation to learn anything in senior year, and ended up not studying at all. I didn't understand how people can just look at code and write more. Code is supposed to be given to a computer, it feels unnatural for a human being to stare at something that's not human reading or write or understand something that's not for another human's comprehension.

Fast forward to college. Although I came in as a system engineering major, I soon realized that the major was full of people who don't dare to study any other hard-core engineering major or who just wanted to go on for some non-engineering related jobs like consulting, retail and whatever jobs out there. I want to learn the hard core engineering stuffs, be a real engineer so it wasn't hard to realize that I need to choose another major. I had bad experiences with computer science that made me realize that I was no good at it either, unlike other science subjects that I tried. So I really prayed that CS would be the last major I chose of engineering. But what else do I want to do? I decided to take all intro classes in the major that I was considering. So I took one in electrical engineering, one in mechanical engineering, two in computer science, and math requirement. 

There are two intro to programming classes, namely 110 and 120. The general rule of thumb is to take 110 if you've never programmed before and take 120 if you know Java or have taken AP CS. I am pretty much the grey area between and as a over-confident freshman with some over-confident advice from over-achiever upperclassmen, I signed up for 120. The first half of the semester was a breeze, because we're learning this functional language called OCaml. Rarely do we start on the same page in computer science and when we did, I did very well. I got almost perfect score on the midterm, nailing whatever conceptual questions given to be about OCaml. And then, it only went down from there. I knew nothing about Java, I didn't feel passionate about it and I realized geez, "I actually don't know how to write a program. I don't know how to test my programs well, how to think about defining the data structures, or helpers." Even the lectures went over my head as I say I relearned everything later when I TAed another class.

Meanwhile, the discrete math class in the CS department was a breeze for me. While others were learning proof and probability for the first time in their lives, I was merely reviewing things that I learned in middle school math competitions. The professors still managed to give challenging problems even for me, but I had fun in that class while almost everyone else was suffering through hell. I hanged out with this annoying dude at the time and he would complain about 160 being so hard and 120 so easy while I just shook my head and said the opposite.

At this point, my relationship with computer science is truly a love-hate relationship. I loved the math in computer science, but I couldn't program. I didn't like programming, it felt frustrating and I didn't know how to make things work properly. I didn't like so much homework and so many late nights with the constant remainder of deadline coming closer and closer. It did felt good when it occasionally worked, but is it really worth it? This can't be the hardest so when it gets even harder, how could I manage? And although I took the intro classes, what computer science really entails is still just a black box to me. Would there be more theories like discrete math that I can nail easily? Would there be all programming that I'm destined to fail? Who knows if I will like programming an app, a website better or I would hate myself for it? (since I really do not know what else is there to CS besides apps). 

At the end of the semester, the discrete math professor recommended me to apply for a TA position the next semester. I was thrilled, making money second semester into college, and helping others with stuff that I absolutely love and know well, what can be better! I spent hours studying for the material, pretending to be a teacher by writing on the chalkboard and talking to myself. I presented a question about pigeonhole theory, but I used the infinite version and I guess wasn't clear enough in formulating the question. The professor teaching next semester, Val Tannen asked me to rephrase my question and told me that the question itself was ill-formed and that I wasn't clear about the explanation either. Although I nailed the other part of the interview. After I sat down, he told me, "maybe it's because you're from China, that your first language is not English, I think you're not very good at explaining and teaching. This is very competitive and I believe I cannot offer you a position." I crashed immediately, losing the one thing that I care about, that I thought I could do. I cried for a while outside his office while he interviewed other students, eventually left and went back to his office, knocking on his door. I went in to literally beg him to give me another chance, that I can show him what I am capable of. I did my best to stop sobbing and talk as normal as I could, "it's wrong that you made comments about my English, or where I come from to tell me that I can't do something. You are unprofessional." I think he probably not only felt annoyed that this random girl kept crying in front of her but also angry that I made such comments. I knew it's time to give up whatever hope I had and leave. It was a few of the worst days of my semester. Although I could share the story with my friends, I could never share the heartbreaking feeling that I felt that night, in that room. So I didn't get the TA job, and tutoring center does not hire students until sophomore year. Adding to the many club rejections first semester of freshman year, was a clear and rude (I still think this way) rejection from a professor that I've never met before that night.

I continued with the challenging CS trajectory, taking data structure the next semester. I absolutely loved the class, as much as I struggled with a few of the programming assignments. I remember me and my best friend pulling half a dozen all-nighters in my room, working on the assignments side by side before they're due the next morning. We would finish when the sky turns bright again, say warm goodbyes, put up an alarm in 4 hours, immediately collapse in bed, and crawl out of bed feeling nauseous in order to go to class. What a messy semester. Some brutal time, but it's nothing special for a CS student's life, where as I later witnessed so many more like me struggle in front of me, seeking for my help.

I didn't apply for industry programs my freshman year, partially because of the lack of information, partially because I don't believe in myself. I dreaded the so-called "technical interviews", wondering how anyone could do it. 

Fast forward to sophomore year, I got the TA position with my favorite CS professor, my goal of sophomore fall was to do well and get a summer internship. I started off acting proactively. Career fair was my first attempt: I wanted more than applying to places. I wanted to get interview practices from real firms. I know that some companies will do next day or on campus interviews, and I tried to talk to those companies particularly hoping that they will sign me up for some next-day interviews. Those are mostly mid-sized companies and I thought since I didn't have particular attachments to them I can just use them as practice real interviews. At 3pm, I got off from class and raced to the career fair, when companies are packing to leave, put down the last resume for TripAdvisor and got a text message later that day for a interview next morning. I was so happy and so nervous -- this would be my first-ever technical interview, at 8:30 am on a Friday because all the other times were taken. I went home and started reading Cracking the Coding Interviews again, hoping the knowledge I have would be enough. 

The interview went decently well, but I did not know what is "good vs. bad" because I've never had anything like this before. I felt good but didn't know if this is a sign that I can expect something to happen next. About a week later, I got an email telling me that I passed the first round. This was such amazing news among all the auto-rejection emails from Twitter and whereever that I kept getting. The next round is a coding homework that I have about 3 days to finish. It felt exciting, designing what data structures, what classes, what functions to write, where to handle errors, where to improve efficiencies... I finished a first draft and asked an upperclassman to help give me some style feedback. He was super helpful suggesting different ways to handle errors, highlighting better coding conventions, etc. I asked the engineer responsible for my assignment a few clarifying questions and realized that I misinterpreted part of the assignment. I told him honestly and went back fixing the behavior. I finished at 1am, a little bit after the supposed deadline but the engineer told me that it was fine. I really liked the whole design and implementation that I was doing. It felt like I was finally in control of the whole process and I could actually program. I waited more axiously for their reply. It came in 2 weeks and I was invited on-site to their office near Boston. Wow, first on-site interview ever, and the first-ever company that I attempted to interview with. It was my first time scheduling flights and some company just pays and arranges everything else. Tripadvisor was amazing at travel accomodation and the whole process just seemed magical.  

I remember getting to Boston airport. A black car picked me up from the airport and Boston was beautiful at night. I checked in at the hotel across from the Tripadvisor office and was taken by surprise when I saw the room: it was a studio with enourmous living room and kitchen, a window looking out at the office across a grass field, and a king bed with a spacious bathroom. I video chatted my mom for half an hour about everything and then studied a little bit before bed. All I was thinking in my head was, I need to interview more, this stuff is purely amazing!

My on-site was equally exciting: Tripadvisor's new HQ was gorgeous: they have different continent themed floors and all the offices are named after cities and sights. They have a plant wall in the lobby and snacks and drinks on each floor. Even after so many more on-sites and companies visits to this day, I still think very highly of that office, of that whole experience. Interviews went okay, I thought. There was maybe one or two times that I made mistakes whiteboard coding. As I left the office, I regretted not trying harder to prepare for it because although I didn't really care about the company before, I was really falling in love with the people, the office and the projects that they have. I could have done better and it would be a shame if I didn't get the offer because I actually enjoyed the prospect of working here for a summer! I got the final decision at Grace Hopper, but I realized that maybe I didn't screw up when the recruiter asked me to schedule a phone call instead of straight up rejecting me in the email. She told me that it was rare for them to give an offer to a sophomore but the engineers liked me and thought that I was smart and competent. 

